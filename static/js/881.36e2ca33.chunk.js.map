{"version":3,"file":"static/js/881.36e2ca33.chunk.js","mappings":"+NAEaA,EAAkBC,EAAAA,GAAAA,IAAH,yL,mBCAfC,EAAYD,EAAAA,GAAAA,MAAH,4CAITE,EAAYF,EAAAA,GAAAA,MAAH,uF,uCCmEtB,EAnEa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAAAC,GACxB,OAAQA,EAAMC,cAAcN,MAC1B,IAAK,OACHC,EAAQI,EAAMC,cAAcC,OAC5B,MACF,IAAK,SACHJ,EAAUE,EAAMC,cAAcC,SAO9BC,GAAWC,EAAAA,EAAAA,MAiBjB,OACE,kBAAMC,SAhBa,SAAAL,GACnBA,EAAMM,iBACN,IAAMC,EAAOP,EAAMC,cAGbO,EAAU,CACdb,KAHWY,EAAKE,SAASd,KAAKO,MAI9BL,OAHaU,EAAKE,SAASZ,OAAOK,OAMpCC,GAASO,EAAAA,EAAAA,IAAWF,IACpBZ,EAAQ,IACRE,EAAU,KAIV,WACE,UAACN,EAAD,mBAEE,SAACC,EAAD,CACEkB,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUhB,EACVG,MAAOP,QAIX,UAACH,EAAD,qBAEE,SAACC,EAAD,CACEkB,KAAK,MACLhB,KAAK,SACLiB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUhB,EACVG,MAAOL,QAIX,SAACmB,EAAA,EAAD,CAAQL,KAAK,SAAb,6BClEOM,EAAqB1B,EAAAA,GAAAA,GAAH,kHCClB2B,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,OAAO,SAACF,EAAD,UAAqBE,KCFjBC,EAAe7B,EAAAA,GAAAA,GAAH,0ECFnB8B,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QCAzBC,EAAmB,SAAAF,GAAK,OAAIA,EAAMG,SAASC,OCuCxD,EA3BiB,WACf,IAAMD,GAAWE,EAAAA,EAAAA,IAAYH,GACvBD,GAASI,EAAAA,EAAAA,IAAYN,GACrBO,EAAqBH,EAASF,QAAO,SAAAf,GAAO,OAChDA,EAAQb,KAAKkC,cAAcC,SAASP,MAGhCpB,GAAWC,EAAAA,EAAAA,MAMjB,OAJA2B,EAAAA,EAAAA,YAAU,WACR5B,GAAS6B,EAAAA,EAAAA,SACR,CAAC7B,KAGF,SAACiB,EAAD,UACGQ,EAAmBK,KAAI,SAAAzB,GAAO,OAC7B,UAACU,EAAD,WACGV,EAAQb,KADX,KACmBa,EAAQX,QACzB,SAACmB,EAAA,EAAD,CAAQkB,kBAAmB,kBAAM/B,GAASgC,EAAAA,EAAAA,IAAc3B,EAAQ4B,MAAhE,sBAFiB5B,EAAQ4B,UC1BtBC,EAAY9C,EAAAA,GAAAA,MAAH,4CAIT+C,EAAY/C,EAAAA,GAAAA,MAAH,sF,UCmBtB,EApBa,WACX,IAAMgC,GAASI,EAAAA,EAAAA,IAAYN,GACrBlB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAACiC,EAAD,oCAEE,SAACC,EAAD,CACE3B,KAAK,OACLT,MAAOqB,EACPR,SAVkB,SAAAf,GACtBG,GAASoC,EAAAA,EAAAA,GAAavC,EAAMC,cAAcC,MAAM2B,uBCOpD,EAZkB,WAChB,OACE,UAACvC,EAAD,YACE,uCACA,SAAC,EAAD,KACA,sCACA,SAAC,EAAD,KACA,SAAC,EAAD","sources":["components/Phonebook/Phonebook.styled.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactsItem/ContactsItem.styled.js","components/ContactsItem/ContactsItem.jsx","components/Contacts/Contacts.styled.js","redux/filter/filter-selector.js","redux/contacts/contacts-selectors.js","components/Contacts/Contacts.jsx","components/Find/Find.styled.js","components/Find/Find.jsx","components/Phonebook/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledPhonebook = styled.div`\n  padding: 8px;\n  width: 400px;\n  margin: 0 auto;\n  background-color: #c2e0fa;\n  border-radius: 4px;\n  box-shadow: 2px 3px 13px 0px rgba(0, 0, 0, 0.73); ;\n`;\n","import styled from 'styled-components';\n\nexport const FormLabel = styled.label`\n  font-size: 20px;\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  font-size: 18px;\n  margin-bottom: 12px;\n`;\n","import { useState } from 'react';\nimport { FormLabel, FormInput } from './Form.styled';\nimport { Button } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n          value={name}\n        ></FormInput>\n      </FormLabel>\n\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n          value={number}\n        ></FormInput>\n      </FormLabel>\n\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const ContactsItemStyled = styled.li`\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n  padding: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactsItemStyled } from './ContactsItem.styled';\n\nexport const ContactsItem = ({ children }) => {\n  return <ContactsItemStyled>{children}</ContactsItemStyled>;\n};\n\nContactsItem.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n","const filterSelector = state => state.filter;\n\nexport { filterSelector };\n","export const contactsSelector = state => state.contacts.items;\n\n// export { contactsSelector };\n","import { useEffect } from 'react';\nimport { Button } from 'components/Button/Button';\nimport { ContactsItem } from 'components/ContactsItem/ContactsItem';\nimport { ContactsList } from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterSelector } from 'redux/filter/filter-selector';\nimport { contactsSelector } from 'redux/contacts/contacts-selectors';\nimport {\n  fetchContacts,\n  removeContact,\n} from 'redux/contacts/contacts-operations';\n\nconst Contacts = () => {\n  const contacts = useSelector(contactsSelector);\n  const filter = useSelector(filterSelector);\n  const contactsWithFilter = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsList>\n      {contactsWithFilter.map(contact => (\n        <ContactsItem key={contact.id}>\n          {contact.name}: {contact.number}\n          <Button handleClickDelete={() => dispatch(removeContact(contact.id))}>\n            Delete\n          </Button>\n        </ContactsItem>\n      ))}\n    </ContactsList>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const FindLabel = styled.label`\n  font-size: 16px;\n`;\n\nexport const FindInput = styled.input`\n  display: block;\n  font-size: 18px;\n  margin-bottom: 8px;\n`;\n","import { FindLabel, FindInput } from './Find.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/filter/filterSlice';\nimport { filterSelector } from 'redux/filter/filter-selector';\n\nconst Find = () => {\n  const filter = useSelector(filterSelector);\n  const dispatch = useDispatch();\n\n  const handleFindInput = event => {\n    dispatch(filterChange(event.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <FindLabel>\n      Find contacts by name\n      <FindInput\n        type=\"text\"\n        value={filter}\n        onChange={handleFindInput}\n      ></FindInput>\n    </FindLabel>\n  );\n};\n\nexport default Find;\n","import { StyledPhonebook } from './Phonebook.styled';\nimport Form from 'components/Form/Form';\nimport Contacts from 'components/Contacts/Contacts';\nimport Find from 'components/Find/Find';\n\nconst Phonebook = () => {\n  return (\n    <StyledPhonebook>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Find />\n      <Contacts />\n    </StyledPhonebook>\n  );\n};\n\nexport default Phonebook;\n"],"names":["StyledPhonebook","styled","FormLabel","FormInput","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","dispatch","useDispatch","onSubmit","preventDefault","form","contact","elements","addContact","type","pattern","title","required","onChange","Button","ContactsItemStyled","ContactsItem","children","ContactsList","filterSelector","state","filter","contactsSelector","contacts","items","useSelector","contactsWithFilter","toLowerCase","includes","useEffect","fetchContacts","map","handleClickDelete","removeContact","id","FindLabel","FindInput","filterChange"],"sourceRoot":""}